generator custom_generator {
  provider = "cd ./prisma/generator && ts-node bin.ts"
}

generator json_server {
  provider       = "prisma-json-server-generator"
  outputFileName = "db.json"
}

generator class_validator {
  provider   = "prisma-class-validator-generator"
  output     = "./generated-models"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:password@localhost:5432/kademiks?schema=public"
}

model contactUs {
  id                                   String               @id(map: "PK_b9750159741b45dc842282d537b") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                            DateTime             @default(now()) @db.Timestamp(6)
  updatedAt                            DateTime             @default(now()) @db.Timestamp(6)
  typeId                               String               @db.Uuid
  title                                String?              @db.VarChar(200)
  message                              String               @db.VarChar(1000)
  state                                contactUs_state_enum @default(un_addressed)
  createdById                          String               @db.Uuid
  addressedById                        String?              @db.Uuid
  users_contactUs_addressedByIdTousers users?               @relation("contactUs_addressedByIdTousers", fields: [addressedById], references: [id], onUpdate: NoAction, map: "FK_f87a0024558b2626632d6c6e100")
  users_contactUs_createdByIdTousers   users                @relation("contactUs_createdByIdTousers", fields: [createdById], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "FK_565baed1355d5d277b73e17f7dc")
  courses                              courses              @relation(fields: [typeId], references: [id], onUpdate: NoAction, map: "FK_4e9202cecf4054a779404b33c59")
  contactUsThread                      contactUsThread[]
}

model contactUsThread {
  id          String    @id(map: "PK_a8a13098515f378cbf86986761c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @default(now()) @db.Timestamp(6)
  contactUsId String    @db.Uuid
  message     String    @db.VarChar(1000)
  fromAdminId String?   @db.Uuid
  contactUs   contactUs @relation(fields: [contactUsId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6fcfd1ee21403905ac48f62918b")
  users       users?    @relation(fields: [fromAdminId], references: [id], onUpdate: NoAction, map: "FK_fdf5812336663fb035c13badbde")
}

model contactUsTypes {
  id        String   @id(map: "PK_50c77f670695b29b3855abde5aa") @db.VarChar(32)
  label     String   @db.VarChar(32)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  order     Int
}

model courses {
  id              String            @id(map: "PK_3f70a487cc718ad8eda4e6d58c9") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime          @default(now()) @db.Timestamp(6)
  updatedAt       DateTime          @default(now()) @db.Timestamp(6)
  code            String            @unique(map: "UQ_86b3589486bac01d2903e22471c") @db.VarChar(10)
  departmentId    String?           @db.Uuid
  label           String            @db.VarChar(200)
  departments     departments?      @relation(fields: [departmentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_2a26294560102d94bc4c67ecfe5")
  contactUs       contactUs[]
  materialFolders materialFolders[]
  messages        messages[]
  timetable       timetable[]
  userCourses     userCourses[]
}

model dealImages {
  id         String    @id(map: "PK_71b3dd629006a358728f2f4814c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @default(now()) @db.Timestamp(6)
  image      String    @db.VarChar(128)
  dealItemId String    @db.Uuid
  dealItems  dealItems @relation(fields: [dealItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6960b873ffeb4c19b9c8a7d22ef")

  @@index([dealItemId], map: "IDX_6960b873ffeb4c19b9c8a7d22e")
}

model dealItems {
  id                                                String                @id(map: "PK_bd5b163b4f4af7a50205b5ee75a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                         DateTime              @default(now()) @db.Timestamp(6)
  updatedAt                                         DateTime              @default(now()) @db.Timestamp(6)
  title                                             String                @db.VarChar(200)
  price                                             Int
  marketPrice                                       Int
  description                                       String?               @db.VarChar(1000)
  location                                          String?               @db.VarChar(200)
  status                                            dealItems_status_enum @default(un_checked)
  isNew                                             Boolean
  isNegotiable                                      Boolean
  categoryId                                        String                @db.VarChar
  createdById                                       String                @db.Uuid
  viewsCount                                        Int                   @default(0)
  dealsCategories                                   dealsCategories       @relation(fields: [categoryId], references: [id], onUpdate: NoAction, map: "FK_62d9fdfd7ed204e2457a752ee98")
  users                                             users                 @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_24aac80f6c07c1f364f63d517d1")
  dealImages                                        dealImages[]
  dealSpecs                                         dealSpecs[]
  dealViews                                         dealViews[]
  featureImages_dealItemsTofeatureImages_dealItemId featureImages[]       @relation("dealItemsTofeatureImages_dealItemId")
  featureImages_dealItemsTofeatureImages_eventId    featureImages[]       @relation("dealItemsTofeatureImages_eventId")
}

model dealSpecs {
  id         String    @id(map: "PK_78edd2427d7e7b595b24d5f2e06") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @default(now()) @db.Timestamp(6)
  label      String    @db.VarChar(64)
  value      String    @db.VarChar(64)
  dealItemId String    @db.Uuid
  dealItems  dealItems @relation(fields: [dealItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_9d8ea752f60f67498884843d674")

  @@index([dealItemId], map: "IDX_9d8ea752f60f67498884843d67")
}

model dealViews {
  id         String    @id(map: "PK_4969bdf354c3c5ae6491c0bce3c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @default(now()) @db.Timestamp(6)
  userId     String    @db.Uuid
  dealItemId String    @db.Uuid
  dealItems  dealItems @relation(fields: [dealItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_49be4a462e5232b389d5e45cd02")
  users      users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6aae5a8ae208ead8eec95e55b16")

  @@unique([userId, dealItemId], map: "UQ_f104fca8641184344a7fadd2167")
}

model dealsCategories {
  id        String      @id(map: "PK_56f64a9001b2b77003a020db617") @db.VarChar(32)
  label     String      @db.VarChar(32)
  createdAt DateTime    @default(now()) @db.Timestamp(6)
  order     Int
  dealItems dealItems[]
}

model departments {
  id          String        @id(map: "PK_839517a681a86bb84cbcc6a1e9d") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  updatedAt   DateTime      @default(now()) @db.Timestamp(6)
  label       String        @db.VarChar(32)
  maxLevel    Int
  facultyId   String        @db.Uuid
  faculties   faculties     @relation(fields: [facultyId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8eb1debd52cf31a5efa81f9b87a")
  courses     courses[]
  messages    messages[]
  userClasses userClasses[]

  @@unique([facultyId, label], map: "UQ_a09c4a61f9d26015c6776abe654")
}

model eventCategories {
  id        String   @id(map: "PK_1de85e97ee1c07705ea34cdd0c2") @db.VarChar(32)
  label     String   @db.VarChar(32)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  order     Int
  events    events[]
}

model eventLikes {
  id        String   @id(map: "PK_3d652e8e539d983d48c6b0d0763") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  userId    String   @db.Uuid
  eventId   String   @db.Uuid
  events    events   @relation(fields: [eventId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ceb71d8248b6672014792303ca2")
  users     users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8251b05171b6db33400d5ab53b4")

  @@unique([userId, eventId], map: "UQ_f62fbbc28b46c8a7794a21f92e7")
}

model events {
  id              String             @id(map: "PK_40731c7151fe4be3116e45ddf73") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime           @default(now()) @db.Timestamp(6)
  updatedAt       DateTime           @default(now()) @db.Timestamp(6)
  name            String             @db.VarChar(200)
  venue           String             @db.VarChar(200)
  contact         String?            @db.VarChar(200)
  dresscode       String?            @db.VarChar(200)
  description     String             @db.VarChar(1000)
  timeFrom        DateTime           @db.Time(6)
  timeTo          DateTime           @db.Time(6)
  date            DateTime           @db.Date
  fee             Int?
  likesCount      Int                @default(0)
  createdById     String             @db.Uuid
  categoryId      String             @db.VarChar
  status          events_status_enum @default(un_checked)
  image           String             @db.VarChar(128)
  eventCategories eventCategories    @relation(fields: [categoryId], references: [id], onUpdate: NoAction, map: "FK_2f7107d3528147b9237b6e2a2fe")
  users           users              @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_2fb864f37ad210f4295a09b684d")
  eventLikes      eventLikes[]
}

model faculties {
  id           String        @id(map: "PK_fd83e4a09c7182ccf7bdb3770b9") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt    DateTime      @default(now()) @db.Timestamp(6)
  updatedAt    DateTime      @default(now()) @db.Timestamp(6)
  label        String        @db.VarChar(32)
  universityId String        @db.VarChar
  universities universities  @relation(fields: [universityId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_88379262bfe610691a3a9371168")
  departments  departments[]
  userClasses  userClasses[]

  @@unique([universityId, label], map: "UQ_560865291e305bafba5d1d43919")
}

model faqs {
  id        String   @id(map: "PK_2ddf4f2c910f8e8fa2663a67bf0") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  question  String   @db.VarChar(1000)
  answer    String   @db.VarChar(1000)
  userId    String?  @db.Uuid
  users     users?   @relation(fields: [userId], references: [id], onUpdate: NoAction, map: "FK_c6bfe1681a52a4289fe782edcdd")
}

model featureImages {
  id                                            String      @id(map: "PK_15203efd30d6829d2d903c56fb6") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                     DateTime    @default(now()) @db.Timestamp(6)
  updatedAt                                     DateTime    @default(now()) @db.Timestamp(6)
  image                                         String      @db.VarChar(128)
  dealItemId                                    String      @db.Uuid
  topicId                                       String      @db.Uuid
  eventId                                       String      @db.Uuid
  dealItems_dealItemsTofeatureImages_dealItemId dealItems   @relation("dealItemsTofeatureImages_dealItemId", fields: [dealItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_7347fc767cb7b16cf1b1d170f5c")
  dealItems_dealItemsTofeatureImages_eventId    dealItems   @relation("dealItemsTofeatureImages_eventId", fields: [eventId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_84e96a9684bd2a5e8ad89e6817a")
  forumTopics                                   forumTopics @relation(fields: [topicId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_888e3a20a68e842a382fe98cadc")

  @@index([dealItemId], map: "IDX_7347fc767cb7b16cf1b1d170f5")
  @@index([eventId], map: "IDX_84e96a9684bd2a5e8ad89e6817")
  @@index([topicId], map: "IDX_888e3a20a68e842a382fe98cad")
}

model forumCategories {
  id          String        @id(map: "PK_9d7da18912009b329200269abd8") @db.VarChar(32)
  label       String        @db.VarChar(32)
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  order       Int
  forumTopics forumTopics[]
}

model forumLikes {
  id                  String               @id(map: "PK_f6f80d43fe5116dba1a248ac7bb") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime             @default(now()) @db.Timestamp(6)
  updatedAt           DateTime             @default(now()) @db.Timestamp(6)
  userId              String               @db.Uuid
  topicId             String?              @db.Uuid
  threadId            String?              @db.Uuid
  threadCommentId     String?              @db.Uuid
  forumThreadComments forumThreadComments? @relation(fields: [threadCommentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_7d0853ef0cffb6198300b66be2f")
  forumThreads        forumThreads?        @relation(fields: [threadId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_a303adc717ea7ef8301d18e5ab9")
  forumTopics         forumTopics?         @relation(fields: [topicId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_411a7e054146a7758ff9f790591")
  users               users                @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_89123dd32be7d2060cae9c0e7d6")
}

model forumThreadComments {
  id           String                          @id(map: "PK_c75308a35799a1e74838061c4df") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt    DateTime                        @default(now()) @db.Timestamp(6)
  updatedAt    DateTime                        @default(now()) @db.Timestamp(6)
  message      String                          @db.VarChar(1000)
  createdById  String                          @db.Uuid
  likesCount   Int                             @default(0)
  threadId     String                          @db.Uuid
  status       forumThreadComments_status_enum @default(approved)
  users        users                           @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_a1402342e456bd8dc24ac995720")
  forumThreads forumThreads                    @relation(fields: [threadId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6909bbc3795eddf33095165c551")
  forumLikes   forumLikes[]
}

model forumThreads {
  id                  String                   @id(map: "PK_5212913d0013ec17479e542814f") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime                 @default(now()) @db.Timestamp(6)
  updatedAt           DateTime                 @default(now()) @db.Timestamp(6)
  message             String                   @db.VarChar(1000)
  commentsCount       Int                      @default(0)
  likesCount          Int                      @default(0)
  createdById         String                   @db.Uuid
  topicId             String                   @db.Uuid
  status              forumThreads_status_enum @default(approved)
  users               users                    @relation(fields: [createdById], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3512527dfe6974c7e8eb806d86a")
  forumTopics         forumTopics              @relation(fields: [topicId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_d0a4731653ec83c9175b8ec36fa")
  forumLikes          forumLikes[]
  forumThreadComments forumThreadComments[]
}

model forumTopics {
  id              String                  @id(map: "PK_64c649504d2450845ac6d077f21") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime                @default(now()) @db.Timestamp(6)
  updatedAt       DateTime                @default(now()) @db.Timestamp(6)
  title           String                  @db.VarChar(200)
  trendingPoint   Int                     @default(0)
  description     String                  @db.VarChar(1000)
  commentsCount   Int                     @default(0)
  likesCount      Int                     @default(0)
  createdById     String                  @db.Uuid
  categoryId      String                  @db.VarChar
  status          forumTopics_status_enum @default(un_checked)
  forumCategories forumCategories         @relation(fields: [categoryId], references: [id], onUpdate: NoAction, map: "FK_bc427acbd21405f63646133044f")
  users           users                   @relation(fields: [createdById], references: [id], onUpdate: NoAction, map: "FK_77dec1d2b912fae7eba657be473")
  featureImages   featureImages[]
  forumLikes      forumLikes[]
  forumThreads    forumThreads[]
}

model grades {
  id         String    @id(map: "PK_4740fb6f5df2505a48649f1687b") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @default(now()) @db.Timestamp(6)
  semesterId String    @db.Uuid
  grade      Int
  unit       Int
  userId     String    @db.Uuid
  course     String    @db.VarChar(7)
  semesters  semesters @relation(fields: [semesterId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_cd51b099eb03b0fc2d4953e8f20")
  users      users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_290b816d140e4004011ea802d6f")

  @@unique([semesterId, course], map: "UQ_318b22a47f15e67d1152f1467bb")
}

model levels {
  id          String        @id(map: "PK_05f8dd8f715793c64d49e3f1901") @db.VarChar(32)
  label       String        @db.VarChar(32)
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  order       Int
  messages    messages[]
  userClasses userClasses[]
}

model materialFiles {
  id              String                  @id(map: "PK_8f81d15a5eb28a123250b0e01b5") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime                @default(now()) @db.Timestamp(6)
  updatedAt       DateTime                @default(now()) @db.Timestamp(6)
  type            materialFiles_type_enum
  src             String                  @db.VarChar(64)
  folderId        String                  @db.Uuid
  createdById     String                  @db.Uuid
  users           users                   @relation(fields: [createdById], references: [id], onUpdate: NoAction, map: "FK_d1f4d59b2f535b484b5bca01e36")
  materialFolders materialFolders         @relation(fields: [folderId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_98ca6023c561595b18d3a300b44")

  @@index([folderId], map: "IDX_98ca6023c561595b18d3a300b4")
}

model materialFolderTypes {
  id              String            @id(map: "PK_35f358a7e8001682ff010fdcd38") @db.VarChar(32)
  label           String            @db.VarChar(32)
  createdAt       DateTime          @default(now()) @db.Timestamp(6)
  order           Int
  materialFolders materialFolders[]
}

model materialFolders {
  id                  String              @id(map: "PK_9fb401b262af47ec35cfd87244a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt           DateTime            @default(now()) @db.Timestamp(6)
  updatedAt           DateTime            @default(now()) @db.Timestamp(6)
  title               String              @db.VarChar(200)
  filesCount          Int                 @default(0)
  description         String?             @db.VarChar(1000)
  courseId            String              @db.Uuid
  lastAddedToAt       DateTime            @db.Date
  createdById         String              @db.Uuid
  typeId              String              @db.VarChar
  courses             courses             @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_fd1974beb2766165bdcc2a823f3")
  users               users               @relation(fields: [createdById], references: [id], onUpdate: NoAction, map: "FK_4cf0b65b1bbeb52e2978be11f57")
  materialFolderTypes materialFolderTypes @relation(fields: [typeId], references: [id], onUpdate: NoAction, map: "FK_b55e8734ed0095979340216b729")
  materialFiles       materialFiles[]
}

model messages {
  id                                 String       @id(map: "PK_18325f38ae6de43878487eff986") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                          DateTime     @default(now()) @db.Timestamp(6)
  updatedAt                          DateTime     @default(now()) @db.Timestamp(6)
  isOpened                           Boolean      @default(false)
  message                            String
  senderId                           String       @db.Uuid
  courseId                           String?      @db.Uuid
  receipientId                       String?      @db.Uuid
  levelId                            String?      @db.VarChar
  departmentId                       String?      @db.Uuid
  courses                            courses?     @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_341f23547d60249d4c21269be06")
  departments                        departments? @relation(fields: [departmentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_67978153e64ee9dc208b75d2376")
  levels                             levels?      @relation(fields: [levelId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_705d8e2d9d1b72e6bd337ef830c")
  users_messages_receipientIdTousers users?       @relation("messages_receipientIdTousers", fields: [receipientId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_bf6578e8eab770996ca570a38b6")
  users_messages_senderIdTousers     users        @relation("messages_senderIdTousers", fields: [senderId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_2db9cf2b3ca111742793f6c37ce")

  @@index([courseId], map: "IDX_341f23547d60249d4c21269be0")
  @@index([senderId, receipientId], map: "IDX_745b3d863c049bb50a26093d4c")
  @@index([departmentId, levelId], map: "IDX_e3bd8ebb09940460056dcd407c")
}

model migrations {
  id        Int    @id(map: "PK_8c82d7f526340ab734260ea46be") @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar
}

model notifications {
  id                String                  @id(map: "PK_6a72c3c0f683f6462415e653c3a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime                @default(now()) @db.Timestamp(6)
  updatedAt         DateTime                @default(now()) @db.Timestamp(6)
  message           String                  @db.VarChar(1000)
  target            String?                 @db.Uuid
  type              notifications_type_enum
  userNotifications userNotifications[]
}

model profiles {
  id             String                @id(map: "PK_8e520eb4da7dc01d0e190447c8e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime              @default(now()) @db.Timestamp(6)
  updatedAt      DateTime              @default(now()) @db.Timestamp(6)
  status         String?               @db.VarChar(1000)
  displayName    String?               @db.VarChar(32)
  displayPicture String?               @db.VarChar(128)
  firstName      String?               @db.VarChar(32)
  lastName       String?               @db.VarChar(32)
  gender         profiles_gender_enum?
  phoneNumber    String?               @db.VarChar(24)
  dob            DateTime?             @db.Date
  userId         String                @unique(map: "UQ_315ecd98bd1a42dcf2ec4e2e985") @db.Uuid
  users          users                 @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_315ecd98bd1a42dcf2ec4e2e985")
}

model quizChats {
  id        String   @id(map: "PK_7dce9059f83d44d97c88232ed9a") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  userId    String   @db.Uuid
  message   String   @db.VarChar
  users     users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_74ac81866556846311402becbed")
}

model quizCoinHistories {
  id              String                        @id(map: "PK_b6de73924c1794698756d5c8cf3") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime                      @default(now()) @db.Timestamp(6)
  updatedAt       DateTime                      @default(now()) @db.Timestamp(6)
  userId          String                        @db.Uuid
  message         String                        @db.VarChar
  source          quizCoinHistories_source_enum
  sourceReference String                        @db.VarChar
  amount          Int
  isCredit        Boolean
  users           users                         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_fb962f2cc96f7592a0a294c55b9")
}

model quizProfiles {
  id         String   @id(map: "PK_a88f758a52fad6d58630b288e57") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  updatedAt  DateTime @default(now()) @db.Timestamp(6)
  coins      Int      @default(0)
  rankPoints Int      @default(0)
  userId     String   @db.Uuid
  users      users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_f2f8f97f3780cf756a4816c3e8d")
}

model quizQuestions {
  id           String        @id(map: "PK_462f8156dacb6b066030168abd1") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt    DateTime      @default(now()) @db.Timestamp(6)
  updatedAt    DateTime      @default(now()) @db.Timestamp(6)
  question     String        @db.VarChar
  optionA      String        @db.VarChar
  optionB      String        @db.VarChar
  optionC      String        @db.VarChar
  optionD      String        @db.VarChar
  createdById  String        @db.Uuid
  questionNo   Int
  level        String        @db.VarChar
  used         Boolean       @default(false)
  sessionId    String?       @db.Uuid
  users        users         @relation(fields: [createdById], references: [id], onUpdate: NoAction, map: "FK_d2445e12bfb54111660c20f71b0")
  quizSessions quizSessions? @relation(fields: [sessionId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_e0fad2e936d9528b22c67135672")
}

model quizReferences {
  id        String   @id(map: "PK_d63bbdc17125de1f223eaef9d60") @db.VarChar(32)
  label     String   @db.VarChar(32)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  order     Int
  value     String   @db.VarChar
  isSystem  Boolean
}

model quizSessions {
  id                String              @id(map: "PK_eafa3f6ea9431b9c724494008d2") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt         DateTime            @default(now()) @db.Timestamp(6)
  updatedAt         DateTime            @default(now()) @db.Timestamp(6)
  sessionNumber     Int
  sessionAlpha      String              @db.VarChar
  sessionName       String              @db.VarChar
  price             Int
  attendance        Int                 @default(0)
  winners           Int                 @default(0)
  coinsUsed         Int                 @default(0)
  perksUsed         Int                 @default(0)
  quizQuestions     quizQuestions[]
  quizUserResponses quizUserResponses[]
  quizUserSessions  quizUserSessions[]
}

model quizUserResponses {
  id           String       @id(map: "PK_8322e8e001b0dd2b0eeedcc4aaf") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt    DateTime     @default(now()) @db.Timestamp(6)
  updatedAt    DateTime     @default(now()) @db.Timestamp(6)
  userId       String       @db.Uuid
  sessionId    String       @db.Uuid
  questionNo   Int
  perk         Int
  answer       String       @db.VarChar
  correct      Boolean
  quizSessions quizSessions @relation(fields: [sessionId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_b5f3a81860a49022d80779b9d0b")
  users        users        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3b1541d40b751a4215d1cb646f6")

  @@index([sessionId, questionNo], map: "IDX_a226e5f4775314d609f597068f")
}

model quizUserSessions {
  id           String       @id(map: "PK_de7aa733d6b4c98b695d6a36870") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt    DateTime     @default(now()) @db.Timestamp(6)
  updatedAt    DateTime     @default(now()) @db.Timestamp(6)
  sessionId    String       @db.Uuid
  userId       String       @db.Uuid
  won          Boolean
  payed        Boolean
  medal        Int
  amountWon    Int          @default(0)
  coinsUsed    Int          @default(0)
  score        Int          @default(0)
  perksUsed    Int          @default(0)
  quizSessions quizSessions @relation(fields: [sessionId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_b6e8144603f0b131e16ceb9f6fc")
  users        users        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_54f6bbf48f6b69b39680dac442c")

  @@unique([userId, sessionId], map: "UQ_99ef1d73bd0b191629840c33641")
}

model semesters {
  id        String   @id(map: "PK_25c393e2e76b3e32e87a79b1dc2") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  userId    String   @db.Uuid
  semester  Int
  year      Int
  users     users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_6917610077db968ed327cf5e9bc")
  grades    grades[]

  @@unique([semester, year, userId], map: "UQ_f6f451bb4f88419899f3f9cb82b")
}

model timetable {
  id              String             @id(map: "PK_06001d91b3fe346fb1387ad1a15") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime           @default(now()) @db.Timestamp(6)
  updatedAt       DateTime           @default(now()) @db.Timestamp(6)
  courseId        String             @db.Uuid
  venue           String?            @db.VarChar(32)
  lecturer        String?            @db.VarChar(32)
  timeFrom        DateTime           @db.Time(6)
  timeTo          DateTime           @db.Time(6)
  lastUpdatedById String             @db.Uuid
  day             timetable_day_enum
  courses         courses            @relation(fields: [courseId], references: [id], onUpdate: NoAction, map: "FK_9cc6b2c53c23571cad8390666f4")
  users           users              @relation(fields: [lastUpdatedById], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "FK_7f8265774055bfbed2b14c6002c")

  @@index([courseId], map: "IDX_9cc6b2c53c23571cad8390666f")
}

model universities {
  id          String        @id(map: "PK_8da52f2cee6b407559fdbabf59e") @db.VarChar(32)
  label       String        @db.VarChar(32)
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  order       Int
  faculties   faculties[]
  userClasses userClasses[]
}

model userClasses {
  id           String       @id(map: "PK_270aee3aada2c01f74ac17b1f57") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt    DateTime     @default(now()) @db.Timestamp(6)
  updatedAt    DateTime     @default(now()) @db.Timestamp(6)
  userId       String       @unique(map: "REL_0abe6642247c4ce2b10abd2f92") @db.Uuid
  facultyId    String       @db.Uuid
  departmentId String       @db.Uuid
  levelId      String       @db.VarChar
  isClassRep   Boolean      @default(false)
  matricNumber String?      @unique(map: "UQ_9b6aa5fcb8b5991b8b3813ed389") @db.VarChar(24)
  universityId String       @db.VarChar
  departments  departments  @relation(fields: [departmentId], references: [id], onUpdate: NoAction, map: "FK_00acad9d885724e3406110f92ff")
  faculties    faculties    @relation(fields: [facultyId], references: [id], onUpdate: NoAction, map: "FK_b55aa50d8b83f0f71adc83a4f39")
  levels       levels       @relation(fields: [levelId], references: [id], onUpdate: NoAction, map: "FK_3ddc86267b222b1eb2438247e7a")
  universities universities @relation(fields: [universityId], references: [id], onUpdate: NoAction, map: "FK_a18ec1d69a2961417ab31a46501")
  users        users        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_0abe6642247c4ce2b10abd2f927")
}

model userCourses {
  id        String   @id(map: "PK_517855f00e7b64e95cf50ca056c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  courseId  String   @db.Uuid
  userId    String   @db.Uuid
  courses   courses  @relation(fields: [courseId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_b1ea350f59aa0a52d147705d1cb")
  users     users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_3316dc8fffd1210ee6d2df0c598")

  @@unique([courseId, userId], map: "UQ_0783c3e99bb9669f0c19b518b5f")
}

model userNotifications {
  id             String        @id(map: "PK_17ee665fbbc2c79f1eb520b0980") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @db.Timestamp(6)
  userId         String        @db.Uuid
  notificationId String        @db.Uuid
  opened         Boolean       @default(false)
  notifications  notifications @relation(fields: [notificationId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_0b205312aae40d082c854c402b9")
  users          users         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_8e43b087cca94ca437c2f2fb9db")

  @@unique([userId, notificationId], map: "UQ_b783fa0f3b5ff749265d91a6516")
}

model userSettings {
  id        String   @id(map: "PK_a1b2f2c0afc54338a962c2bb526") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  userId    String   @db.Uuid
  field     String   @db.VarChar
  value     String   @db.VarChar
  users     users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_551a8a9a9ac4b13dcec83202dbe")

  @@unique([userId, field], map: "UQ_e54674ad5c51cc771a3e2df523d")
}

model userVerifications {
  id               String   @id(map: "PK_02f1ba60eb4817f06e7c69bfe2e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt        DateTime @default(now()) @db.Timestamp(6)
  updatedAt        DateTime @default(now()) @db.Timestamp(6)
  verificationHash String   @db.VarChar(64)
  userId           String   @unique(map: "REL_01175dfe4b6553c9867c7620d8") @db.Uuid
  users            users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_01175dfe4b6553c9867c7620d89")
}

model users {
  id                                       String                @id(map: "PK_a3ffb1c0c8416b9fc6f907b7433") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt                                DateTime              @default(now()) @db.Timestamp(6)
  updatedAt                                DateTime              @default(now()) @db.Timestamp(6)
  verified                                 Boolean               @default(false)
  email                                    String                @unique(map: "IDX_97672ac88f789774dd47f7c8be") @db.VarChar(64)
  password                                 String                @db.VarChar(64)
  userName                                 String                @unique(map: "IDX_226bb9aa7aa8a69991209d58f5") @db.VarChar(32)
  contactUs_contactUs_addressedByIdTousers contactUs[]           @relation("contactUs_addressedByIdTousers")
  contactUs_contactUs_createdByIdTousers   contactUs[]           @relation("contactUs_createdByIdTousers")
  contactUsThread                          contactUsThread[]
  dealItems                                dealItems[]
  dealViews                                dealViews[]
  eventLikes                               eventLikes[]
  events                                   events[]
  faqs                                     faqs[]
  forumLikes                               forumLikes[]
  forumThreadComments                      forumThreadComments[]
  forumThreads                             forumThreads[]
  forumTopics                              forumTopics[]
  grades                                   grades[]
  materialFiles                            materialFiles[]
  materialFolders                          materialFolders[]
  messages_messages_receipientIdTousers    messages[]            @relation("messages_receipientIdTousers")
  messages_messages_senderIdTousers        messages[]            @relation("messages_senderIdTousers")
  profiles                                 profiles?
  quizChats                                quizChats[]
  quizCoinHistories                        quizCoinHistories[]
  quizProfiles                             quizProfiles[]
  quizQuestions                            quizQuestions[]
  quizUserResponses                        quizUserResponses[]
  quizUserSessions                         quizUserSessions[]
  semesters                                semesters[]
  timetable                                timetable[]
  userClasses                              userClasses?
  userCourses                              userCourses[]
  userNotifications                        userNotifications[]
  userSettings                             userSettings[]
  userVerifications                        userVerifications?
}

enum contactUs_state_enum {
  un_addressed @map("un-addressed")
  addressed
  closed
}

enum dealItems_status_enum {
  un_checked @map("un-checked")
  approved
  suspended
  withdrawn
  expired
}

enum events_status_enum {
  un_checked @map("un-checked")
  approved
  suspended
  withdrawn
  expired
}

enum forumThreadComments_status_enum {
  un_checked @map("un-checked")
  approved
  suspended
  withdrawn
  expired
}

enum forumThreads_status_enum {
  un_checked @map("un-checked")
  approved
  suspended
  withdrawn
  expired
}

enum forumTopics_status_enum {
  un_checked @map("un-checked")
  approved
  suspended
  withdrawn
  expired
}

enum materialFiles_type_enum {
  pdf
  doc
  img
}

enum notifications_type_enum {
  classthread
  coursethread
  timetable
  messages
  materials
  support
  class_rep_role @map("class-rep-role")
  mentions
}

enum profiles_gender_enum {
  male
  female
}

enum quizCoinHistories_source_enum {
  bought
  referral
  ad_reward
  facebook
  twitter
  rating
  birthday
  transfer_to
  transfer_from
  used
  game_attendace_deduction
  signup_bonus
}

enum timetable_day_enum {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
}
